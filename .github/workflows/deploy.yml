name: Run deploy
on:
  workflow_dispatch: {inputs: {type: {required: true, default: dev}}}
permissions: {}  # Set permissions at the job level

jobs:
  test_prod:
    if: github.event.inputs.type == 'prod'
    runs-on: ubuntu-latest
    strategy: {matrix: {name: ['3.11', '3.12']}}
    env: {BRANCH: main}
    timeout-minutes: 10
    steps:  &test_steps
    - uses: actions/checkout@v5
      with:
        ref: ${{ env.BRANCH }}
        persist-credentials: false
    - uses: actions/setup-python@v4
      with:
        python-version: ${{matrix.name}}

    - name: Install test dependencies
      run:  pip install rust-just

    - name: Run tests
      run:  just test

    - name: Run build
      run:  just build

  deploy_prod:
    needs: [test_prod]
    runs-on: ubuntu-latest
    strategy: {matrix: {name: ['3.12']}}
    environment: production
    env: {BRANCH: main, PYPI_SITE: ''}
    steps:  &deploy_steps
    - uses: actions/checkout@v5
      with:
        ref: ${{ env.BRANCH }}
        persist-credentials: false
    - uses: actions/setup-python@v4
      with:
        python-version: ${{matrix.name}}

    - name: Install deploy dependencies
      run:  pip install rust-just twine

    - name: Run build
      run:  just build

    - name: Publish PyPI Release
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        export VERSION=$(sed -En 's|loadconfig ([0-9.dev]+) .+|\1|p' build/notes.md)
        twine upload ${{ env.PYPI_SITE }} build/wheel/loadconfig*

    - name: Publish GitHub Release
      if: github.event.inputs.type == 'prod'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        export VERSION=$(sed -En 's|loadconfig ([0-9.dev]+) .+|\1|p' build/notes.md)
        cp build/wheel/loadconfig-*.whl build/wheel/loadconfig-0.0.0-py3-none-any.whl
        gh release create "$VERSION" -F build/notes.md build/wheel/loadconfig-*.whl


  test_dev:
    if: github.event.inputs.type == 'dev'
    runs-on: ubuntu-latest
    strategy: {matrix: {name: ['3.12']}}
    env: {BRANCH: dev}
    timeout-minutes: 10
    steps:  *test_steps

  deploy_dev:
    needs: [test_dev]
    runs-on: ubuntu-latest
    strategy: {matrix: {name: ['3.12']}}
    environment: development
    env: {BRANCH: dev, PYPI_SITE: '-r testpypi'}
    steps:  *deploy_steps
